function q2w3_sidebar_init() {
	for (var e = 0; e < q2w3_sidebar_options.length; e++) {
		q2w3_sidebar(q2w3_sidebar_options[e]);
	}
	jQuery(window).on('resize', function() {
		for (var b = 0; b < q2w3_sidebar_options.length; b++) {
			q2w3_sidebar(q2w3_sidebar_options[b]);
		}
	});
	var d = (function() {
		for (var g = [ 'WebKit', 'Moz', 'O', 'Ms', '' ], c = 0; c < g.length; c++) {
			if (g[c] + 'MutationObserver' in window) {
				return window[g[c] + 'MutationObserver'];
			}
		}
		return !1;
	})();
	if (0 == q2w3_sidebar_options[0].disable_mo_api && d) {
		q2w3Refresh = !1;
		var f = new d(function(b) {
			b.forEach(function(c) {try{
				q2w3_exclude_mutations_array(q2w3_sidebar_options).indexOf(c.target.id) == -1 &&
					c.target.className.indexOf('q2w3-fixed-widget-container') == -1 &&
					(q2w3Refresh = !0);
			}catch(notInit){}});
		});
		f.observe(document.body, { childList: !0, attributes: !0, attributeFilter: [ 'style', 'class' ], subtree: !0 }),
			setInterval(function() {
				if (q2w3Refresh) {
					for (var b = 0; b < q2w3_sidebar_options.length; b++) {
						q2w3_sidebar(q2w3_sidebar_options[b]);
					}
					q2w3Refresh = !1;
				}
			}, 300);
	} else {
		console.log('MutationObserver not supported or disabled!'),
			q2w3_sidebar_options[0].refresh_interval > 0 &&
				setInterval(function() {
					for (var b = 0; b < q2w3_sidebar_options.length; b++) {
						q2w3_sidebar(q2w3_sidebar_options[b]);
					}
				}, q2w3_sidebar_options[0].refresh_interval);
	}
}
function q2w3_exclude_mutations_array(f) {
	for (var e = new Array(), h = 0; h < f.length; h++) {
		if (f[h].widgets.length > 0) {
			for (var g = 0; g < f[h].widgets.length; g++) {
				e.push(f[h].widgets[g]), e.push(f[h].widgets[g] + '_clone');
			}
		}
	}
	return e;
}
function q2w3_sidebar(t) {
	function s() {}
	function k(a) {
		var x = a.offset_top - a.fixed_margin_top,
			w = p - t.margin_bottom;
		t.stop_id && jQuery('#' + t.stop_id).length && (w = jQuery('#' + t.stop_id).offset().top - t.margin_bottom);
		var v;
		v = t.width_inherit ? 'inherit' : a.obj.css('width');
		var u = !1,
			e = !1,
			d = !1;
		jQuery(window)
			.on('scroll.' + t.sidebar, function(c) {
				if (jQuery(window).width() <= t.screen_max_width || jQuery(window).height() <= t.screen_max_height) {
					d ||
						(a.obj.css('position', ''),
						a.obj.css('top', ''),
						a.obj.css('bottom', ''),
						a.obj.css('width', ''),
						a.obj.css('margin', ''),
                        a.obj.css('padding', ''),
                        a.obj.css('transform', 'translateX(100%)'),
						widget_obj.parent().css('height', ''),
						jQuery('#' + a.clone_id).length > 0 && jQuery('#' + a.clone_id).remove(),
						(d = !0),
						(u = !1),
						(e = !1));
				} else {
					var b = jQuery(this).scrollTop();
					b + a.fixed_margin_bottom >= w
						? (e ||
								(a.obj.css('position', 'fixed'),
								a.obj.css('top', ''),
								a.obj.css('width', v),
								jQuery('#' + a.clone_id).length <= 0 && a.obj.before(a.clone),
								(e = !0),
								(u = !1),
								(d = !1)),
							a.obj.css('bottom', b + q + a.next_widgets_height - w))
						: b >= x
							? u ||
								(a.obj.css('position', 'fixed'),
								a.obj.css('top', a.fixed_margin_top),
								a.obj.css('opacity', 1),
								a.obj.css('bottom', ''),
								a.obj.css('width', v),
								jQuery('#' + a.clone_id).length <= 0 && a.obj.before(a.clone),
								(u = !0),
								(e = !1),
								(d = !1))
							: d ||
								(a.obj.css('position', ''),
								a.obj.css('opacity', 0),
								a.obj.css('top', ''),
								a.obj.css('bottom', ''),
								a.obj.css('width', ''),
								jQuery('#' + a.clone_id).length > 0 && jQuery('#' + a.clone_id).remove(),
								(d = !0),
								(u = !1),
								(e = !1));
				}
			})
			.trigger('scroll.' + t.sidebar);
	}
	if (!t) {
		return !1;
	}
	if (!t.widgets) {
		return !1;
	}
	if (t.widgets.length < 1) {
		return !1;
	}
	t.sidebar || (t.sidebar = 'q2w3-default-sidebar');
	var r = new Array(),
		q = jQuery(window).height(),
		p = jQuery(document).height(),
		o = t.margin_top;
	jQuery('#wpadminbar').length && (o = t.margin_top + jQuery('#wpadminbar').height()),
		jQuery('.q2w3-widget-clone-' + t.sidebar).remove();
	for (var n = 0; n < t.widgets.length; n++) {
		(widget_obj = jQuery('#' + t.widgets[n])),
			widget_obj.css('position', ''),
			widget_obj.attr('id')
				? ((r[n] = new s()),
					(r[n].obj = widget_obj),
					(r[n].clone = widget_obj.clone()),
					r[n].clone.children().remove(),
					(r[n].clone_id = widget_obj.attr('id') + '_clone'),
					r[n].clone.addClass('q2w3-widget-clone-' + t.sidebar),
					r[n].clone.attr('id', r[n].clone_id),
					r[n].clone.css('height', widget_obj.height()),
					r[n].clone.css('visibility', 'hidden'),
					(r[n].offset_top = widget_obj.offset().top),
					(r[n].fixed_margin_top = o),
					(r[n].height = widget_obj.outerHeight(!0)),
					(r[n].fixed_margin_bottom = o + r[n].height),
					(o += r[n].height))
				: (r[n] = !1);
	}
	for (var l, m = 0, n = r.length - 1; n >= 0; n--) {
		r[n] &&
			((r[n].next_widgets_height = m),
			(r[n].fixed_margin_bottom += m),
			(m += r[n].height),
			l ||
				((l = widget_obj.parent()),
				l.addClass('q2w3-fixed-widget-container'),
				l.css('height', ''),
				l.height(l.height())));
	}
	jQuery(window).off('scroll.' + t.sidebar);
	for (var n = 0; n < r.length; n++) {
		r[n] && k(r[n]);
	}
}
'undefined' != typeof q2w3_sidebar_options && q2w3_sidebar_options.length > 0
	? window.jQuery
		? q2w3_sidebar_options[0].window_load_hook
			? jQuery(window).load(q2w3_sidebar_init())
			: jQuery(document).ready(q2w3_sidebar_init())
		: console.log('jQuery is not loaded!')
	: console.log('q2w3_sidebar_options not found!');
